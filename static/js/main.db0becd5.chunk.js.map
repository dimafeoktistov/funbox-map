{"version":3,"sources":["utils/makeActionCreator.js","actions/mapActions.js","actions/placesListActions.js","components/Search/index.jsx","components/ListItem/index.jsx","components/PlacesList/index.jsx","utils/yMap.js","components/App/App.jsx","serviceWorker.js","utils/createReducer.js","reducers/mapReducer.js","reducers/placesListReducer.js","combineReducers.js","sagas/mapSaga.js","initSagas.js","getStore.js","index.js"],"names":["makeActionCreator","type","_len","arguments","length","argNames","Array","_key","_len2","args","_key2","action","forEach","arg","index","createMap","actionCreator","INIT_MAP","initMap","UPDATE_POLYLINE","updatePolyline","setLoading","setSnapbar","ADD_PLACE","addPlace","DELETE_PLACE","deletePlace","savePlace","updatePlace","REORDER_PLACES","reorderPlaces","Search","_ref","props","Object","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","place","setPlace","react_default","a","createElement","assign","onSubmit","e","preventDefault","className","TextField_default","id","label","placeholder","onChange","event","target","value","required","Button_default","variant","color","style","marginLeft","listItemStyle","display","justifyContent","alignItems","padding","marginBottom","ListItem","handleDelete","react_beautiful_dnd_esm","key","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","Paper_default","Typography_default","component","maxWidth","name","width","onClick","paperStyle","marginRight","maxHeight","overflowX","minWidth","PlacesList","places","components_Search","onDragEnd","result","destination","source","items","list","startIndex","endIndex","from","_result$splice","splice","removed","reorder","droppableId","droppableProps","map","components_ListItem","ymaps","window","connect","_ref2","placesList","placesListReducer","_ref2$mapReducer","mapReducer","loading","snackBar","dispatch","mapActions","placesListActions","handleClose","useEffect","addEventListener","handleLoad","ready","Fragment","Snackbar_default","anchorOrigin","vertical","horizontal","open","ContentProps","aria-describedby","onClose","message","autoHideDuration","CssBaseline_default","CircularProgress_default","AppBar_default","position","Toolbar_default","components_PlacesList","Boolean","location","hostname","match","createReducer","initialState","handlers","state","undefined","hasOwnProperty","polyLine","_createReducer","defineProperty","_ref$payload","payload","objectSpread","placesListReducer_createReducer","concat","types","filter","p","_ref3","_ref3$payload","coords","_ref4","combineReducers","reducers","addPlacemark","removePlacemark","mapSaga","generateId","Math","random","toString","substr","regenerator_default","wrap","_context","prev","next","Map","center","zoom","Polyline","strokeWidth","strokeColor","geoObjects","add","put","stop","_marked","this","updateMarker","marker","get","properties","geometry","getCoordinates","store","isNameUniq","isCoordsUniq","placemark","_context2","select","sent","getCenter","find","console","log","Placemark","balloonContent","draggable","preset","events","fork","_marked2","_ref5","_context3","_ref6","remove","_marked3","coordsArray","_ref8","_context4","_ref7","setCoordinates","_marked4","_context5","all","takeLatest","_marked5","logger","createLogger","reducer","getStore","sagaMiddleware","createSagaMiddleware","middleWares","thunk","composables","applyMiddleware","apply","enhancer","compose","createStore","values","sagas","run","bind","initSagas","ReactDOM","render","es","components_App_App","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.db0becd5.chunk.js","sourcesContent":["const makeActionCreator = (type, ...argNames) => {\n  return function(...args) {\n    let action = { type };\n    argNames.forEach((arg, index) => {\n      action[argNames[index]] = args[index];\n    });\n    return action;\n  };\n};\n\nexport default makeActionCreator;","import actionCreator from \"../utils/makeActionCreator\";\n\nexport const CREATE_MAP = \"app/CREATE_MAP\";\nexport const createMap = actionCreator(CREATE_MAP, \"payload\");\n\nexport const ADD_ROUTE = \"app/ADD_ROUTE\";\nexport const addRoute = actionCreator(ADD_ROUTE, \"payload\");\n\nexport const INIT_MAP = \"app/INIT_MAP\";\nexport const initMap = actionCreator(INIT_MAP);\n\nexport const UPDATE_POLYLINE = \"app/UPDATE_POLYLINE\";\nexport const updatePolyline = actionCreator(UPDATE_POLYLINE);\n\nexport const SET_LOADING = \"app/SET_LOADING\";\nexport const setLoading = actionCreator(SET_LOADING);\n\nexport const SET_SNAPBAR = \"app/SET_SNAPBAR\";\nexport const setSnapbar = actionCreator(SET_SNAPBAR, \"payload\")\n","import actionCreator from \"../utils/makeActionCreator\";\n\nexport const ADD_PLACE = \"app/ADD_PLACE\";\nexport const addPlace = actionCreator(ADD_PLACE, \"payload\");\n\nexport const DELETE_PLACE = \"app/DELETE_PLACE\";\nexport const deletePlace = actionCreator(DELETE_PLACE, \"payload\");\n\nexport const SAVE_PLACE = \"app/SAVE_PLACE\";\nexport const savePlace = actionCreator(SAVE_PLACE, \"payload\");\n\nexport const UPDATE_PLACE = \"app/UPDATE_PLACE\";\nexport const updatePlace = actionCreator(UPDATE_PLACE, \"payload\");\n\nexport const REORDER_PLACES = \"app/REORDER_PLACES\";\nexport const reorderPlaces = actionCreator(REORDER_PLACES, \"payload\");\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport \"./Search.css\";\n\nconst Search = ({ addPlace, ...props }) => {\n  const [place, setPlace] = useState(\"\");\n  const handlePlaceChange = event => setPlace(event.target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addPlace(place);\n    setPlace(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} {...props} className=\"form\">\n      <TextField\n        id=\"place\"\n        label=\"Место маршрута\"\n        type=\"text\"\n        placeholder=\"Введите место\"\n        className=\"search\"\n        onChange={handlePlaceChange}\n        value={place}\n        required\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        type=\"submit\"\n        className=\"button\"\n        style={{ marginLeft: '10px' }}\n      >\n        Добавить\n      </Button>\n    </form>\n  );\n};\n\nSearch.propTypes = {\n  addPlace: PropTypes.func.isRequired\n};\n\nexport default Search;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nconst listItemStyle = {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  padding: 10,\n  marginBottom: 10\n};\n\nconst ListItem = ({ place, deletePlace, index }) => {\n  const handleDelete = () => deletePlace(place);\n\n  return (\n    <Draggable key={place.id} draggableId={place.id} index={index}>\n      {provided => (\n        <li\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <Paper style={listItemStyle}>\n            <Typography component=\"p\" style={{ maxWidth: \"75%\" }}>\n              {place.name}\n            </Typography>\n            <Button\n              type=\"button\"\n              style={{ width: \"25%\" }}\n              onClick={handleDelete}\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              Удалить\n            </Button>\n          </Paper>\n        </li>\n      )}\n    </Draggable>\n  );\n};\n\nListItem.propTypes = {\n  place: PropTypes.instanceOf(Object).isRequired,\n  deletePlace: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired\n};\n\nexport default ListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Search from \"../Search\";\nimport ListItem from \"../ListItem\";\n\nimport \"./PlacesList.css\";\n\nconst paperStyle = {\n  marginRight: 20,\n  padding: 15,\n  maxHeight: \"90vh\",\n  overflowX: \"scroll\",\n  minWidth: 350,\n  maxWidth: 350\n};\n\nconst PlacesList = ({\n  places,\n  addPlace,\n  deletePlace,\n  reorderPlaces,\n  ...props\n}) => {\n  // Небольшая функция помогающая изменить индекс списка\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n  };\n\n  const onDragEnd = result => {\n    const { destination, source } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (destination.index === source.index) {\n      return;\n    }\n\n    const items = reorder(places, source.index, destination.index);\n    reorderPlaces(items);\n  };\n  return (\n    <Paper {...props} style={paperStyle}>\n      <Search addPlace={addPlace} />\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"droppable\">\n          {provided => (\n            <ul {...provided.droppableProps} ref={provided.innerRef}>\n              {places.map((place, index) => (\n                <ListItem\n                  place={place}\n                  key={place.id}\n                  deletePlace={deletePlace}\n                  index={index}\n                />\n              ))}\n              {provided.placeholder}\n              {places.length === 0 && (\n                <Typography component=\"p\">\n                  Пока не добавлено ни одного маркера\n                </Typography>\n              )}\n            </ul>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </Paper>\n  );\n};\n\nPlacesList.propTypes = {\n  places: PropTypes.instanceOf(Array).isRequired,\n  addPlace: PropTypes.func.isRequired,\n  reorderPlaces: PropTypes.func.isRequired\n};\n\nexport default PlacesList;\n","const { ymaps } = window;\n\nexport default ymaps;","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport * as mapActions from \"../../actions/mapActions\";\nimport * as placesListActions from \"../../actions/placesListActions\";\n\nimport PlacesList from \"../PlacesList\";\n\nimport ymaps from \"../../utils/yMap\";\nimport \"./App.css\";\n\nexport const App = ({\n  initMap,\n  addPlace,\n  placesList,\n  deletePlace,\n  reorderPlaces,\n  loading,\n  snackBar,\n  handleClose\n}) => {\n  useEffect(() => {\n    window.addEventListener(\"load\", handleLoad);\n  }, []);\n\n  const handleLoad = () => {\n    ymaps.ready(() => {\n      initMap();\n    });\n  };\n\n  return (\n    <>\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={snackBar.open}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\"\n        }}\n        onClose={() => handleClose({ open: false, message: '' })}\n        autoHideDuration={3000}\n        message={<span id=\"message-id\">{snackBar.message}</span>}\n      />\n      <CssBaseline />\n      {loading && (\n        <div className=\"spinner\">\n          <CircularProgress />\n        </div>\n      )}\n      <div className=\"App\">\n        <AppBar position=\"static\" color=\"default\">\n          <Toolbar>\n            <Typography variant=\"h4\" color=\"inherit\">\n              Тестовое задание для FunBox.\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <div className=\"container\">\n          <PlacesList\n            places={placesList}\n            addPlace={addPlace}\n            deletePlace={deletePlace}\n            reorderPlaces={reorderPlaces}\n          />\n          <Paper id=\"map\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nApp.propTypes = {\n  initMap: PropTypes.func.isRequired,\n  addPlace: PropTypes.func.isRequired,\n  placesList: PropTypes.instanceOf(Array).isRequired,\n  reorderPlaces: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = ({\n  placesListReducer: { placesList },\n  mapReducer: { loading, snackBar }\n}) => ({\n  placesList,\n  loading,\n  snackBar\n});\n\nconst mapDispatchToProps = dispatch => ({\n  initMap() {\n    dispatch(mapActions.initMap());\n  },\n  addPlace(place) {\n    dispatch(placesListActions.addPlace(place));\n  },\n  deletePlace(place) {\n    dispatch(placesListActions.deletePlace(place));\n  },\n  reorderPlaces(places) {\n    dispatch(placesListActions.reorderPlaces(places));\n  },\n  handleClose(snackBar) {\n    dispatch(mapActions.setSnapbar(snackBar))\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const createReducer = (initialState, handlers) => {\n  return function reducer(state = initialState, action) {\n    if (handlers.hasOwnProperty(action.type)) {\n      return handlers[action.type](state, action);\n    } else {\n      return state;\n    }\n  };\n};\n\nexport default createReducer;\n","import createReducer from '../utils/createReducer';\nimport * as types from '../actions/mapActions';\n\nconst initialState = {\n    map: null,\n    polyLine: null,\n    loading: true,\n    snackBar: {\n        open: false,\n        message: null\n    }\n}\n\nexport const mapReducer = createReducer(initialState, {\n    [types.CREATE_MAP](state, { payload: { map, polyLine } }) { return { ...state, map, polyLine } },\n\n    [types.SET_LOADING](state) { return { ...state, loading: false }},\n\n    [types.SET_SNAPBAR](state, { payload }) { return { ...state, snackBar: payload }}\n});\n","import createReducer from \"../utils/createReducer\";\nimport * as types from \"../actions/placesListActions\";\n\nconst initialState = {\n  placesList: []\n};\n\nexport const placesListReducer = createReducer(initialState, {\n  [types.SAVE_PLACE](state, { payload }) {\n    return { ...state, placesList: state.placesList.concat(payload) };\n  },\n\n  [types.DELETE_PLACE](state, { payload }) {\n    return { ...state, placesList: state.placesList.filter(p => p.id !== payload.id)}\n  },\n  \n  [types.UPDATE_PLACE](state, { payload: { id, coords } }) {\n    return { ...state, placesList: state.placesList.map(place => {\n      if (place.id === id) {\n        return { ...place, coords }\n      }\n      return place;\n    })}\n  },\n\n  [types.REORDER_PLACES](state, { payload: placesList }) {\n    return { ...state, placesList }\n  }\n});\n","import { combineReducers } from 'redux';\nimport * as reducers from './reducers'\n\nexport default combineReducers(reducers);","import { put, takeLatest, all, select, fork } from \"redux-saga/effects\";\n\nimport store from \"../getStore\";\n\nimport * as mapActions from \"../actions/mapActions\";\nimport * as placesListActions from \"../actions/placesListActions\";\nimport ymaps from \"../utils/yMap\";\n\nconst generateId = () =>\n  Math.random()\n    .toString(36)\n    .substr(2, 9);\n\nfunction* initMap() {\n  const map = new ymaps.Map(\"map\", {\n    center: [55.75, 37.57],\n    zoom: 9\n  });\n\n  const polyLine = new ymaps.Polyline(\n    [],\n    {},\n    {\n      strokeWidth: 2,\n      strokeColor: \"#0000FF\"\n    }\n  );\n\n  map.geoObjects.add(polyLine);\n\n  yield put(mapActions.createMap({ map, polyLine }));\n  yield put(mapActions.setLoading());\n}\n\nfunction updateMarker(e) {\n  const marker = e.get(\"target\");\n  const id = marker.properties.get(\"id\");\n  const coords = marker.geometry.getCoordinates();\n  store.dispatch(placesListActions.updatePlace({ id, coords }));\n  store.dispatch(mapActions.updatePolyline());\n}\n\nfunction* addPlacemark(action) {\n  const id = generateId();\n  const { map } = yield select(({ mapReducer }) => mapReducer);\n  const { placesList } = yield select(\n    ({ placesListReducer }) => placesListReducer\n  );\n  const { payload: name } = action;\n  const coords = map.getCenter();\n\n  const isNameUniq = placesList.find(place => place.name === name);\n  const isCoordsUniq = placesList.find(place => {\n    return place.coords[0] === coords[0] && place.coords[1] === coords[1];\n  });\n\n  console.log(isCoordsUniq);\n\n  if (!!isCoordsUniq) {\n    yield put(\n      mapActions.setSnapbar({\n        open: true,\n        message: \"Точка с такими координатами уже есть!\"\n      })\n    );\n  } else if (!!isNameUniq) {\n    yield put(\n      mapActions.setSnapbar({\n        open: true,\n        message: \"Точка с таким названием уже есть!\"\n      })\n    );\n  } else {\n    const placemark = new ymaps.Placemark(\n      coords,\n      {\n        // При клике на маркер, появится название точки.\n        balloonContent: name,\n        id\n      },\n      {\n        draggable: true, // Маркер можно перемещать.\n        preset: \"islands#whiteStretchyIcon\"\n      }\n    );\n\n    placemark.events.add(\"dragend\", updateMarker);\n\n    const place = { name, coords, id, placemark };\n    yield put(placesListActions.savePlace(place));\n    map.geoObjects.add(placemark);\n    yield fork(updatePolyline);\n  }\n}\n\nfunction* removePlacemark(action) {\n  const { map } = yield select(({ mapReducer }) => mapReducer);\n  const { payload: place } = action;\n  yield map.geoObjects.remove(place.placemark);\n  yield fork(updatePolyline);\n}\n\nfunction* updatePolyline() {\n  const coordsArray = yield select(({ placesListReducer: { placesList } }) => {\n    return placesList.map(place => place.coords);\n  });\n\n  const { polyLine } = yield select(state => ({\n    polyLine: state.mapReducer.polyLine\n  }));\n  polyLine.geometry.setCoordinates(coordsArray);\n}\n\nexport function* mapSaga() {\n  yield all([\n    takeLatest(placesListActions.ADD_PLACE, addPlacemark),\n    takeLatest(placesListActions.DELETE_PLACE, removePlacemark),\n    takeLatest(placesListActions.REORDER_PLACES, updatePolyline),\n    takeLatest(mapActions.INIT_MAP, initMap),\n    takeLatest(mapActions.UPDATE_POLYLINE, updatePolyline)\n  ]);\n}\n","import * as sagas from \"./sagas\";\n\nexport const initSagas = sagaMiddleware => {\n  Object.values(sagas).forEach(sagaMiddleware.run.bind(sagaMiddleware));\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\n\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducer from \"./combineReducers\";\nimport { initSagas } from \"./initSagas\";\n\nconst logger = createLogger({\n  reducer\n});\n\nconst getStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middleWares = [sagaMiddleware, thunk, logger];\n  const composables = [applyMiddleware(...middleWares)];\n  const enhancer = compose(...composables);\n  const store = createStore(reducer, {}, enhancer);\n  initSagas(sagaMiddleware);\n  return store;\n};\n\nexport default getStore();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport store from './getStore';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}